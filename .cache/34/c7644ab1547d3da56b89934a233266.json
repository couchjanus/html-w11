{"id":"sass/styles.scss","dependencies":[{"name":"/home/janus/www/html-w11/src/sass/partials/_base.scss","includedInParent":true,"mtime":1542205296485},{"name":"/home/janus/www/html-w11/src/sass/partials/_flex.scss","includedInParent":true,"mtime":1542367381006},{"name":"/home/janus/www/html-w11/src/sass/partials/_grid.scss","includedInParent":true,"mtime":1542367845153},{"name":"/home/janus/www/html-w11/src/sass/partials/_nav.scss","includedInParent":true,"mtime":1542364424229},{"name":"/home/janus/www/html-w11/src/sass/partials/_variables.scss","includedInParent":true,"mtime":1541752312251},{"name":"./../images/cat1.jpg","dynamic":true,"resolved":"/home/janus/www/html-w11/src/images/cat1.jpg","loc":{"line":301,"column":3},"parent":"/home/janus/www/html-w11/src/sass/styles.scss"},{"name":"./../images/cat2.jpg","dynamic":true,"resolved":"/home/janus/www/html-w11/src/images/cat2.jpg","loc":{"line":307,"column":3},"parent":"/home/janus/www/html-w11/src/sass/styles.scss"},{"name":"./../images/cat4.jpg","dynamic":true,"resolved":"/home/janus/www/html-w11/src/images/cat4.jpg","loc":{"line":304,"column":3},"parent":"/home/janus/www/html-w11/src/sass/styles.scss"},{"name":"_css_loader","parent":"/home/janus/www/html-w11/src/sass/styles.scss","resolved":"/home/janus/.nvm/versions/node/v11.0.0/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/home/janus/www/html-w11/package.json","includedInParent":true,"mtime":1542282093345}],"generated":{"css":"@charset \"UTF-8\";\n@import url(https://fonts.googleapis.com/css?family=Cherry+Swash);\n@import url(https://fonts.googleapis.com/css?family=Raleway:400,800);\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a,\nabbr, acronym, address, big, cite, code, del, dfn, em, font, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt,\nvar, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n  background: transparent;\n  box-sizing: border-box !important; }\n\nbody {\n  color: #333; }\n\nhtml, body {\n  overflow-x: hidden; }\n\na {\n  color: inherit;\n  text-decoration: none; }\n\nimg {\n  max-width: 100%; }\n\n.flex-container {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  /* Сначала создадим flex-контекст */\n  /* display: inline-flex; */\n  display: flex;\n  /* display: -webkit-box;\n          display: -moz-box;\n          display: -ms-flexbox;\n          display: -webkit-flex; */\n  /* Теперь определим направление потока\n            * flex-direction: row | row-reverse | column | column-reverse\n            * Устанавливает главную ось main-axis, определяя тем самым направление для flex-элементов, размещаемых в контейнере.\n            * row (по умолчанию): слева направо для ltr, справа налево для rtl;\n            * row-reverse: справа налево для ltr, слева направо для rtl;\n            * column: аналогично row, сверху вниз;\n            * column-reverse: аналогично row-reverse, снизу вверх.\n          */\n  /* row (по умолчанию): слева направо для ltr, справа налево для rtl; */\n  /* flex-direction: row; */\n  /* row-reverse: справа налево для ltr, слева направо для rtl; */\n  /* flex-direction:row-reverse; */\n  /* column: аналогично row, сверху вниз; */\n  /* flex-direction:column; */\n  /* column-reverse: аналогично row-reverse, снизу вверх. */\n  /* flex-direction:column-reverse; */\n  /* flex-direction:initial; */\n  /* flex-direction:unset; */\n  /* flex-wrap: nowrap; */\n  /* flex-wrap: wrap; */\n  /* flex-wrap: wrap-reverse; */\n  flex-flow: row wrap;\n  /* Теперь определим, как будет распределяться пространство */\n  justify-content: space-around; }\n\n.flex-item {\n  flex: 1 1 auto;\n  width: 50px;\n  transition: width 0.7s ease-out; }\n\n.flex-item:nth-child(1) {\n  background: blue; }\n\n.flex-item:nth-child(2) {\n  background: #ffff01; }\n\n.flex-item:nth-child(3) {\n  background: white; }\n\n.flex-item:nth-child(4) {\n  background: #ffff01; }\n\n.flex-item:nth-child(5) {\n  background: blue; }\n\n.flex-item:hover {\n  width: 200px; }\n\n.parent {\n  display: flex;\n  height: 300px;\n  /* Или что угодно */ }\n\n.child {\n  height: auto;\n  /* Или что угодно */\n  margin: auto;\n  /* Магия! */ }\n\n.flex-section {\n  display: flex; }\n\n.flex-article {\n  margin: 1rem;\n  /* flex-grow: 1; */\n  flex: 1;\n  /* flex-basis: 250px; */\n  /* flex-shrink: 0;  */ }\n\n.breaking {\n  /* flex-grow: 2; */\n  flex: 2; }\n\n@media screen and (max-width: 750px) {\n  body > h1 {\n    font-size: 2rem; }\n  .flex-section {\n    flex-direction: column; } }\n\n.main {\n  min-height: 800px;\n  margin: 0px;\n  padding: 0px;\n  display: flex;\n  flex-flow: row; }\n\n.main > article {\n  margin: 4px;\n  padding: 5px;\n  border: 1px solid #cccc33;\n  border-radius: 7pt;\n  background: #dddd88;\n  flex: 3 1 80%;\n  order: 2; }\n\n.main > aside {\n  margin: 4px;\n  padding: 5px;\n  border: 1px solid #8888bb;\n  border-radius: 7pt;\n  background: #ccccff;\n  flex: 1 6 20%;\n  order: 3; }\n\nfooter {\n  display: block;\n  margin: 4px;\n  padding: 5px;\n  min-height: 100px;\n  border: 1px solid #eebb55;\n  border-radius: 7pt;\n  background: #ffeebb; }\n\n@media all and (max-width: 640px) {\n  .main {\n    flex-direction: column; }\n  header,\n  .main > article,\n  .main > aside {\n    /* Return them to document order */\n    order: 0; }\n  .main > aside,\n  footer {\n    min-height: 50px;\n    max-height: 50px; } }\n\n.u-box {\n  width: 100%;\n  max-width: 960px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap; }\n\n.box-base {\n  background: #ff0;\n  min-height: 430px;\n  font-size: 5rem;\n  color: #eee;\n  flex: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n.box-side {\n  margin-left: 30px;\n  display: flex;\n  flex: 0 0 220px;\n  flex-direction: column; }\n\n.box-itm {\n  background: #00f;\n  min-height: 200px;\n  font-size: 5rem;\n  color: #eee;\n  margin-bottom: 30px;\n  flex: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n.box-itm:last-child {\n  margin-bottom: 0; }\n\n@media screen and (max-width: 800px) {\n  .box-base {\n    margin-bottom: 30px;\n    flex: 0 1 100%; }\n  .box-side {\n    margin-left: 0;\n    flex: 1 1 100%;\n    flex-direction: row; }\n  .box-itm {\n    margin: 0 0 0 30px; }\n  .box-itm:first-child {\n    margin-left: 0; } }\n\n@media screen and (max-width: 600px) {\n  .box-side {\n    flex-direction: column; }\n  .box-itm {\n    margin: 0 0 30px; }\n  .box-itm:last-child {\n    margin-bottom: 0; } }\n\n.flex-video {\n  position: relative;\n  padding-top: 25px;\n  height: 0;\n  margin-bottom: 16px;\n  overflow: hidden; }\n\n.flex-video iframe {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%; }\n\n@media only screen and (max-device-width: 800px), only screen and (device-width: 1024px) and (device-height: 600px), only screen and (width: 1280px) and (orientation: landscape), only screen and (device-width: 800px), only screen and (max-width: 767px) {\n  .flex-video {\n    padding-top: 0; } }\n\n.row {\n  display: flex; }\n\n.inner-wrap {\n  margin: 0 auto; }\n\nfooter[role=\"contentinfo\"] {\n  height: 40px;\n  background: #FF9D3C;\n  vertical-align: middle;\n  align-items: center; }\n\n.flex-row {\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 700px;\n  /* макс ширина */\n  margin: 0 auto;\n  /* выровняем по центру */ }\n\n.flex-col {\n  flex: 1 1 calc(33.33% - 30px);\n  /* отнимем margin и скажем растягиваться */\n  margin: 5px;\n  box-sizing: border-box;\n  /* чтобы внутренний отступ не влиял когда там будет текст... */\n  min-width: 170px;\n  /* мин. ширина блока, чтобы переносились на другой ряд */\n  padding: 50px 20px;\n  font-size: 400%;\n  text-align: center;\n  background: #b5ced8;\n  /* для красоты */ }\n\n.flex-block {\n  display: flex;\n  overflow: hidden;\n  /*скроем тень*/ }\n\n.item-block {\n  height: 300px;\n  flex: 20%;\n  /* = flex-basis:20%; */\n  transition: flex 300ms ease;\n  box-shadow: 0 0 19px 3px #000;\n  margin: 1px;\n  /* красивости тени */ }\n\n.item-block:hover {\n  flex: 0.1 0.1 400px;\n  background-size: 100% 100%; }\n\n.img1 {\n  background: url(\"c99a96affa0f391c4f09cce07b3f661b.jpg\") 0 0 no-repeat; }\n\n.img2 {\n  background: url(\"d48a5452a02f0c3e3f5e36d658e2fd84.jpg\") 0 0 no-repeat; }\n\n.img3 {\n  background: url(\"c99a96affa0f391c4f09cce07b3f661b.jpg\") 0 0 no-repeat; }\n\n.img4 {\n  background: url(\"3fca54858e9b82790a54a022cff22afb.jpg\") 0 0 no-repeat; }\n\n.img5 {\n  background: url(\"d48a5452a02f0c3e3f5e36d658e2fd84.jpg\") 0 0 no-repeat; }\n\n.flex-grid {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2em;\n  display: flex;\n  justify-content: space-between;\n  /* item */\n  /* внутри item */ }\n  .flex-grid .grid-item {\n    max-width: 250px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between; }\n  .flex-grid .grid-item:nth-child(2) {\n    margin-left: 1em;\n    margin-right: 1em; }\n  .flex-grid .grid-item .text,\n  .flex-grid .grid-item .link {\n    margin-top: 2em; }\n  .flex-grid .grid-item img {\n    border-radius: 50%; }\n  .flex-grid .grid-item .text {\n    flex-grow: 1; }\n  .flex-grid .grid-item .link a {\n    display: block;\n    padding: .5em 2em;\n    max-width: 160px;\n    margin: 0 auto;\n    color: #fff;\n    text-decoration: none;\n    background: #6b6b6b;\n    border-radius: 3px; }\n\n.nav-menu {\n  background-color: #CC6600;\n  list-style: none;\n  margin: 0;\n  display: flex;\n  flex-flow: row wrap;\n  /* justify-content: flex-end; */\n  /* justify-content: flex-start; */\n  /* justify-content: center; */\n  /* justify-content: space-between; */\n  justify-content: space-around; }\n\n.nav-item a {\n  color: #FFF;\n  display: block;\n  padding: 15px 20px;\n  text-decoration: none; }\n\n.nav-item a:hover,\n.nav-item a:focus {\n  background-color: tomato; }\n\n@media (max-width: 767px) {\n  .nav-menu {\n    flex-flow: column wrap;\n    justify-content: space-around;\n    padding: 0; }\n  .nav-item a {\n    border-top: 1px solid rgba(255, 255, 255, 0.4);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n    text-align: center; } }\n\n@media screen and (max-width: 750px) {\n  body > h1 {\n    font-size: 2rem; } }\n\nfooter {\n  display: block;\n  margin: 4px;\n  padding: 5px;\n  min-height: 100px;\n  border: 1px solid #eebb55;\n  border-radius: 7pt;\n  background: #ffeebb; }\n\n@media all and (max-width: 640px) {\n  header {\n    /* Return them to document order */\n    order: 0; }\n  footer {\n    min-height: 50px;\n    max-height: 50px; } }\n\n/* Drop Down */\n.drop-down li {\n  position: relative; }\n\n.drop-down li ul {\n  display: none;\n  width: 100%;\n  position: absolute;\n  list-style-type: none;\n  background-color: #CC6600;\n  margin: 0;\n  flex-flow: row wrap; }\n\n.drop-down li ul a {\n  width: 135px; }\n\n.drop-down li:hover > ul {\n  display: flex; }\n\nfooter[role=\"contentinfo\"] {\n  height: 40px;\n  background: #FF9D3C;\n  vertical-align: middle;\n  align-items: center; }\n\n/* \n      Как работают элементы div?\n      div - элементы уровня блока. Они не будут терпеть никаких элементов ни с левой или с правой стороне и, таким образом, будут занимать всю ширину. Однако высота элементов div вычисляется из его потомков. div будет занимать столько высоты, сколько требуется для отображения содержимого.\n      */\n.grid-container div {\n  color: #fff;\n  font-size: 2em;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n.grid-container div:nth-child(1n) {\n  background-color: #C1DBB3; }\n\n.grid-container div:nth-child(3n) {\n  background-color: #7798AB; }\n\n.grid-container div:nth-child(2n) {\n  background-color: #FF8966; }\n\n.grid-container {\n  display: grid;\n  /* \n        :: grid-template-columns:repeat(3,1fr) :: \n        repeat(no of columns, width of a column)\n        1fr takes the entire available width\n        :: grid-template-rows:repeat(2,1fr) :: \n        repeat(no of rows, height of a row)\n        1fr takes the entire available width\n     */\n  /* \n        :: grid-gap:5px ::\n        Gap between each grid element    \n     */\n  grid-gap: 5px;\n  /*\n        Shorthand for defining rows and columns\n        grid-template: repeat(2,1fr) / repeat(3,1fr)\n        Remember drawing an L: First rows & then columns\n     */\n  grid-template: repeat(2, 1fr)/repeat(3, minmax(240px, 1fr)); }\n\n.cards {\n  list-style: none;\n  margin: 0;\n  padding: 0; }\n  .cards li {\n    border: 2px solid #490A3D;\n    border-radius: 5px;\n    background-color: #BD1550;\n    color: #fff;\n    flex: 1 1 240px; }\n  .cards h2 {\n    background-color: #490A3D;\n    margin: 0;\n    padding: 10px; }\n  .cards p {\n    padding: 10px; }\n  .cards img {\n    padding: 10px;\n    max-width: 100%; }\n\n.container {\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: 60px minmax(40px, 1fr) 140px;\n  grid-gap: 5px;\n  /*\n        grid-template-areas:\n        \"h h h h h h h h h h h h\"\n        \"m m c c c c c c c c c c\"\n        \"f f f f f f f f f f f f\"\n        Naming your layout based on the available columns & rows. Similar letters should form a rectangle to work. Use '.' for blank cells.\n    */\n  grid-template-areas: \"h h h h h h h h h h h h\" \"m m c c c c c c c c c c\" \"f f f f f f f f f f f f\"; }\n\n.container div {\n  color: #fff;\n  font-size: 2em;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n.container div:nth-child(1n) {\n  background-color: #C1DBB3; }\n\n.container div:nth-child(3n) {\n  background-color: #7798AB; }\n\n.container div:nth-child(2n) {\n  background-color: #FF8966; }\n\n.container div:nth-child(4n) {\n  background-color: #ffcc5c; }\n\n/*  1) Way 1\n        grid-column-start:1;\n        grid-column-end: 3;\n        This means that grid column should start at column line 1 and should finish at column line 3. We have two columns in this example,\n        and thus, three column lines.\n    2) Way 2\n        Shorthand method of above syntax: start / end\n        grid-column: 1  / 3;\n    3) Way 3\n        grid-column: 1 / span 2;\n        Start at column 1 and span across two columns\n    4) Way 4\n        :: grid-column: 1 / -1 :: Start at column 1 & span till last column line\n    */\n.header {\n  grid-column: 1 / 11; }\n\n.aside {\n  grid-column: 11 / span 2;\n  grid-row: 1 / -1; }\n\n.content {\n  grid-column: 1 / 11; }\n\n.footer {\n  grid-column: 1 / 11; }\n\n.fit-container {\n  display: grid;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  grid-auto-rows: 75px;\n  grid-auto-flow: dense; }\n\n.fit-container > div > img {\n  object-fit: cover;\n  width: 100%;\n  height: 100%; }\n\n/* \n    grid-auto-flow: row ::  It means containers will be placed one by one & one row at a time. \n    grid-auto-flow: dense ::  Attempts to fill up the holes.\n    Source order independence which means grid can reorder the layout regardless of how it is written in markup.\n*/\n.horizontal {\n  /* \n        For horizontal images, apply grid-column property.\n        grid-column: 1 / span 2 :: This would always start with column 1 irrespective of available space in previous row.\n        Instead, use grid-column: auto / span 2; || grid-column: span 2;\n    */\n  grid-column: span 2; }\n\n.vertical {\n  grid-row: span 3; }\n\n.square {\n  grid-column: span 3;\n  grid-row: span 3; }\n\n.auto-fit-container {\n  border: 1px solid black;\n  display: grid;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  grid-template-rows: 100px 100px; }\n\n.auto-fill-container {\n  border: 1px solid black;\n  display: grid;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  grid-template-rows: 100px 100px; }\n\n.auto-fit-container > div, .container2 > div {\n  color: #fff;\n  font-size: 2em;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n\n.auto-fit-container > div > img, .auto-fill-container > div > img {\n  object-fit: cover;\n  width: 100%;\n  height: 100%; }\n\n.auto-fit-container > div:nth-child(1n),\n.auto-fill-container > div:nth-child(1n) {\n  background-color: #C1DBB3; }\n\n.auto-fit-container > div:nth-child(3n),\n.auto-fill-container > div:nth-child(3n) {\n  background-color: #7798AB; }\n\n.auto-fit-container > div:nth-child(2n),\n.auto-fill-container > div:nth-child(2n) {\n  background-color: #FF8966; }\n\n.auto-fit-container > div:nth-child(4n),\n.auto-fill-container > div:nth-child(4n) {\n  background-color: #ffcc5c; }\n\nh1.title {\n  margin: 4rem 0;\n  font-size: 4rem;\n  text-align: center; }\n\n.justify-container {\n  border: 1px solid black;\n  height: 100%;\n  display: grid;\n  grid-gap: 5px;\n  grid-template-columns: repeat(3, 100px);\n  grid-template-rows: repeat(2, 100px);\n  justify-content: space-evenly;\n  align-content: center; }\n  .justify-container > div:nth-child(1n) {\n    background-color: #C1DBB3; }\n  .justify-container > div:nth-child(3n) {\n    background-color: #7798AB; }\n  .justify-container > div:nth-child(2n) {\n    background-color: #FF8966; }\n  .justify-container > div:nth-child(4n) {\n    background-color: #ffcc5c; }\n\n/* \n    justify-content: center;\n    Justifies the content horizontally (start, center, end etc..)\n    space-between: Puts space between the elements.\n    space-evenly: Distributes space equally among the items.\n    space-aroud: First & last space would be of half of the size compare to the in-between spaces.\n    align-content:center;\n    Aligns the content vertically.\n*/\n.subscribe-container {\n  height: 100vh;\n  max-width: 1000px;\n  padding: 1rem; }\n\n.subscribe-form {\n  background: #323a45;\n  padding: 2rem; }\n\n/* fallback styles */\n.grid {\n  display: flex;\n  flex-flow: row wrap; }\n\n.grid--gutter-small {\n  margin-left: -1rem; }\n\n.grid__item {\n  flex: 1 0 auto;\n  padding-left: 1rem;\n  padding-bottom: 1rem;\n  width: 200px; }\n\n/* end fallback styles */\n@supports (display: grid) {\n  .grid {\n    display: grid; }\n  /* resets */\n  .grid__item {\n    padding: initial;\n    width: auto; }\n  .grid--gutter-small {\n    margin: initial; } }\n\n.grid--gutter-small {\n  grid-gap: 1rem; }\n\n.grid--auto-sizing {\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }\n\n.heading {\n  color: #fff;\n  font-size: 1.5rem;\n  font-weight: 700;\n  letter-spacing: 0.1rem;\n  margin-bottom: 1rem;\n  text-align: center;\n  text-transform: uppercase; }\n\n.input {\n  border: none;\n  border-radius: 3px;\n  display: block;\n  font-size: 0.9rem;\n  font-weight: 300;\n  padding: 1rem;\n  width: 100%; }\n\nlabel {\n  color: #fff;\n  margin-bottom: 0.5rem;\n  font-weight: 300;\n  font-size: 0.8rem; }\n\n.button {\n  background: none;\n  background-color: #ff3366;\n  border: none;\n  border-radius: 3px;\n  color: #fff;\n  cursor: pointer;\n  font-size: 0.9rem;\n  margin-top: auto;\n  padding: 1rem;\n  text-transform: uppercase;\n  width: 100%; }\n\n.media {\n  border: 2px solid #f76707;\n  border-radius: 5px;\n  background-color: #fff4e6;\n  max-width: 400px; }\n\n.media {\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  grid-template-areas: \"img content\";\n  margin-bottom: 1em; }\n\n.media .image {\n  grid-area: img;\n  background-color: #ffd8a8; }\n\n.media .text {\n  grid-area: content;\n  padding: 10px; }\n\n.media.flipped {\n  grid-template-columns: 3fr 1fr;\n  grid-template-areas: \"content img\"; }\n\n.wrapper {\n  margin: 0 auto;\n  width: 90%;\n  height: auto;\n  border: 2px solid #CCC;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  justify-content: center;\n  align-content: end; }\n\n.box {\n  background-color: #444;\n  color: #fff;\n  border-radius: 5px;\n  padding: 20px;\n  font-size: 150%; }\n\n.item1 {\n  grid-column: 1 / 5;\n  background-color: #00a; }\n\n.item2 {\n  grid-column: 1 / 3;\n  grid-row: 2 / 4;\n  background-color: #a00; }\n\n.item3 {\n  grid-column: 3 / 5;\n  background-color: #0a0; }\n\n.wrapper-box {\n  display: grid;\n  grid-gap: 10px;\n  width: 90%;\n  margin: 0 auto;\n  grid-template-columns: repeat(4, [col] 180px);\n  grid-template-rows: repeat(2, [row] auto);\n  background-color: #fff;\n  color: #444; }\n\n.in-box {\n  background-color: #444;\n  color: #fff;\n  border-radius: 5px;\n  padding: 20px;\n  font-size: 150%; }\n\n.in-box .box {\n  background-color: #ccc;\n  color: #444; }\n\n.a {\n  grid-column: col / span 2;\n  grid-row: row; }\n\n.b {\n  grid-column: col 3 / span 2;\n  grid-row: row; }\n\n.c {\n  grid-column: col / span 2;\n  grid-row: row 2; }\n\n.d {\n  grid-column: col 3 / span 2;\n  grid-row: row 2;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: 1fr 1fr; }\n\n.e {\n  grid-column: 1 / 3;\n  grid-row: 1; }\n\n.f {\n  grid-column: 1;\n  grid-row: 2; }\n\n.g {\n  grid-column: 2;\n  grid-row: 2; }\n\n.grid-layout {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  grid-gap: 10px;\n  grid-auto-rows: minmax(120px, auto);\n  grid-auto-flow: dense;\n  padding: 10px; }\n\n.grid-item {\n  padding: 1rem;\n  font-size: 14px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: #929796;\n  background-color: #333;\n  border-radius: 5px; }\n\n.grid-item:nth-child(odd) {\n  background-color: #424242; }\n\n.span-2 {\n  grid-column-end: span 2;\n  grid-row-end: span 2; }\n\n.span-3 {\n  grid-column-end: span 3;\n  grid-row-end: span 4; }\n","js":"var reloadCSS = require('_css_loader');\n\nmodule.hot.dispose(reloadCSS);\nmodule.hot.accept(reloadCSS);"},"hash":"6d5354d7a82fd37289a1b1c8d54b9b45","cacheData":{"env":{}}}